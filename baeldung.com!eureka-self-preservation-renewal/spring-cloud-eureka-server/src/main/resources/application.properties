# [N]:eureka-server

spring.application.name=Eurekaserver

# [N] To counter the default behaviour, tells the Eureka Server to not register with itself.
eureka.client.registerWithEureka=false
# ... and to not cache registry information locally
eureka.client.fetchRegistry=false

# 8761 is the default one for Eureka servers.
# go to http://localhost:8761 to view the Eureka dashboard 
server.port=8761

# [Baeldung]:eureka-server - Important property since we're running the eureka server in a local machine. Otherwise, we may end up creating an unavailable replica within the Eureka server – messing up the client's heartbeat counts (See https://www.baeldung.com/eureka-self-preservation-renewal#server).
eureka.instance.hostname=localhost

eureka.server.expected-client-renewal-interval-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.server.eviction-interval-timer-in-ms=60000

# [Baeldung]:eureka-server - The server calculates the expected heartbeats per minute from all the registered clients – the default value is 0.85 (See https://www.baeldung.com/eureka-self-preservation-renewal#server).
# [N]:eureka-server -  Used to get rid of the following warning in the eureka dashboard: "EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY'RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE."
eureka.server.renewal-percent-threshold=0.85

eureka.server.renewal-threshold-update-interval-ms=900000
eureka.server.enable-self-preservation=true